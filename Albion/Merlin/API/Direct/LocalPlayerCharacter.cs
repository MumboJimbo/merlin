////////////////////////////////////////////////////////////////////////////////////
// Merlin API for Albion Online v1.0.327.94396-live
////////////////////////////////////////////////////////////////////////////////////
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;

using UnityEngine;

using Albion.Common.Time;

namespace Merlin.API.Direct
{
    /* Internal type: awt */
    public class LocalPlayerCharacter
    {
        private static List<MethodInfo> _methodReflectionPool = new List<MethodInfo>();
        private static List<PropertyInfo> _propertyReflectionPool = new List<PropertyInfo>();
        
        private awt _internal;
        
        #region Properties
        
        public awt Internal => _internal;
        
        #endregion
        
        #region Fields
        
        
        #endregion
        
        #region Methods
        
        public ObservableRange<acy> GetCraftingFocus() => _internal.sd();
        public Point2 GetDestination() => _internal.tl();
        public GameTimeStamp GetGlobalCooldownTimeStamp() => _internal.th();

        public float IsCastingSpell() => _internal.v6().f();
        public float GetSpellSlotCooldownPercent(byte A_0) => _internal.hk((byte)A_0);
        public SpellSlot[] GetSpellSlots()
        {
            var internalSpells = _internal.tg();
            var spells = new SpellSlot[internalSpells.Length];

            for (int i = 0; i < spells.Length; i++)
            {
                if (internalSpells[i] != null)
                    spells[i] = new SpellSlot(internalSpells[i]);
            }

            return spells;
        }
        public float GetLoad() => _internal.ua();
        public float GetMaxLoad() => _internal.we();
        public float GetHealth() => _internal.v4().r();
        public float GetMaxHealth() => _internal.v4().l();

        #endregion

        #region Constructor

        public LocalPlayerCharacter(awt instance)
        {
            _internal = instance;
        }
        
        static LocalPlayerCharacter()
        {
            
        }
        
        #endregion
        
        #region Conversion
        
        public static implicit operator awt(LocalPlayerCharacter instance)
        {
            return instance._internal;
        }
        
        public static implicit operator LocalPlayerCharacter(awt instance)
        {
            return new LocalPlayerCharacter(instance);
        }
        
        #endregion
    }
}
